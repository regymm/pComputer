#*****************************************************************************************
# Vivado (TM) v2019.1 (64-bit)
#
# pCPU.tcl: Tcl script for re-creating project 'pCPU'
#
# Generated by Vivado on Thu Jul 30 23:24:39 CST 2020
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (pCPU.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/div_gen_0/div_gen_0.xci"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/mult_gen_0/mult_gen_0.xci"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/alu.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/cpu_control_unit.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/cpu_coprocessor0.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/register_file.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/cpu-multi-cycle.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/mmapper.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/gpio.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/clock_div_pulse.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/uart.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/debounce.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/isr_memory/isr_memory.xci"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/interrupt_unit.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/timer_interrupt.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/sd_controller.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/sdcard.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/clock_divider.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/sdmm.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/mmu.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/bd/top_design/hdl/top_design_wrapper.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/labkit_sd.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/video.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/keyboard.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/edgefetcher.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/special_io.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/dist_mem_gen_0/dist_mem_gen_0.xci"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/clk_wiz_0/clk_wiz_0.xci"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/video_memory/video_memory.xci"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/sdcard_buffer_ram/sdcard_buffer_ram.xci"
#    "/home/petergu/MyHome/pComputer/pCPU/PYNQ-Z1_C.xdc"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sim_1/new/top_simu.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sim_1/new/debounce_simu.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sim_1/new/uart_simu.v"
#    "/home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sim_1/new/cpu_multicyc_simu.v"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/petergu/MyHome/pComputer/asm/result_test_jal_jr.coe"
#    "/home/petergu/MyHome/pComputer/asm/result_testuart_read.coe"
#    "/home/petergu/MyHome/pComputer/asm/result_echo.coe"
#    "/home/petergu/MyHome/pComputer/pseudOS/coe/result_exception.coe"
#    "/home/petergu/MyHome/pComputer/pseudOS/coe/result_bootrom.coe"
#    "/home/petergu/MyHome/pComputer/pseudOS/coe/result_test.coe"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "pCPU"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "pCPU.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z020clg400-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "www.digilentinc.com:pynq-z1:part0:1.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.board_id" -value "pynq-z1" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "88" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "88" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "88" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "88" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "88" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "88" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "88" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "131" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/../../Vivado/Digilent"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../asm/result_test_jal_jr.coe"] \
 [file normalize "${origin_dir}/../asm/result_testuart_read.coe"] \
 [file normalize "${origin_dir}/../asm/result_echo.coe"] \
 [file normalize "${origin_dir}/../pseudOS/coe/result_exception.coe"] \
 [file normalize "${origin_dir}/../pseudOS/coe/result_bootrom.coe"] \
 [file normalize "${origin_dir}/../pseudOS/coe/result_test.coe"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/ip/div_gen_0/div_gen_0.xci" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/ip/mult_gen_0/mult_gen_0.xci" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/alu.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/cpu_control_unit.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/cpu_coprocessor0.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/register_file.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/cpu-multi-cycle.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/mmapper.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/gpio.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/clock_div_pulse.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/uart.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/debounce.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/ip/isr_memory/isr_memory.xci" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/interrupt_unit.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/timer_interrupt.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/sd_controller.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/sdcard.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/clock_divider.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/sdmm.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/mmu.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/bd/top_design/hdl/top_design_wrapper.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/labkit_sd.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/video.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/keyboard.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/edgefetcher.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/new/special_io.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/ip/dist_mem_gen_0/dist_mem_gen_0.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "div_gen_0/div_gen_0.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "mult_gen_0/mult_gen_0.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "isr_memory/isr_memory.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "dist_mem_gen_0/dist_mem_gen_0.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "top_design_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/ip/clk_wiz_0/clk_wiz_0.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "clk_wiz_0/clk_wiz_0.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/ip/video_memory/video_memory.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "video_memory/video_memory.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/pCPU.srcs/sources_1/ip/sdcard_buffer_ram/sdcard_buffer_ram.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "sdcard_buffer_ram/sdcard_buffer_ram.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/PYNQ-Z1_C.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "pCPU/PYNQ-Z1_C.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files *pCPU/PYNQ-Z1_C.xdc]" -objects $obj
set_property -name "target_ucf" -value "[get_files *pCPU/PYNQ-Z1_C.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/pCPU.srcs/sim_1/new/top_simu.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sim_1/new/debounce_simu.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sim_1/new/uart_simu.v" ]\
 [file normalize "${origin_dir}/pCPU.srcs/sim_1/new/cpu_multicyc_simu.v" ]\
]
set imported_files [import_files -fileset sim_1 $files]

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "top_simu" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.log_all_signals" -value "1" -objects $obj
set_property -name "xsim.simulate.runtime" -value "100000ns" -objects $obj
set_property -name "xsim.simulate.saif_all_signals" -value "1" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files div_gen_0.xci] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/div_gen_0/div_gen_0.xci
}
if { [get_files mult_gen_0.xci] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/mult_gen_0/mult_gen_0.xci
}
if { [get_files alu.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/alu.v
}
if { [get_files cpu_control_unit.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/cpu_control_unit.v
}
if { [get_files cpu_coprocessor0.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/cpu_coprocessor0.v
}
if { [get_files register_file.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/register_file.v
}
if { [get_files cpu-multi-cycle.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/cpu-multi-cycle.v
}
if { [get_files mmapper.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/mmapper.v
}
if { [get_files gpio.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/gpio.v
}
if { [get_files clock_div_pulse.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/clock_div_pulse.v
}
if { [get_files uart.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/uart.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/debounce.v
}
if { [get_files isr_memory.xci] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/ip/isr_memory/isr_memory.xci
}
if { [get_files interrupt_unit.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/interrupt_unit.v
}
if { [get_files timer_interrupt.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/timer_interrupt.v
}
if { [get_files sd_controller.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/sd_controller.v
}
if { [get_files sdcard.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/sdcard.v
}
if { [get_files clock_divider.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/clock_divider.v
}
if { [get_files sdmm.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/sdmm.v
}
if { [get_files mmu.v] == "" } {
  import_files -quiet -fileset sources_1 /home/petergu/MyHome/pComputer/pCPU/pCPU.srcs/sources_1/new/mmu.v
}


# Proc to create BD top_design
proc cr_bd_top_design { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# clock_divider_bd, cpu_multi_cycle, debounce, debounce, gpio, interrupt_unit, mmapper, mmu, sdcard, sdmm, timer_interrupt, uart



  # CHANGE DESIGN NAME HERE
  set design_name top_design

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:dist_mem_gen:8.0\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:xlslice:1.0\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  clock_divider_bd\
  cpu_multi_cycle\
  debounce\
  debounce\
  gpio\
  interrupt_unit\
  mmapper\
  mmu\
  sdcard\
  sdmm\
  timer_interrupt\
  uart\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set btn [ create_bd_port -dir I -from 3 -to 0 btn ]
  set led [ create_bd_port -dir O -from 3 -to 0 led ]
  set led4 [ create_bd_port -dir O -from 2 -to 0 led4 ]
  set led5 [ create_bd_port -dir O -from 2 -to 0 led5 ]
  set sd_cmd [ create_bd_port -dir O sd_cmd ]
  set sd_dat0 [ create_bd_port -dir I sd_dat0 ]
  set sd_dat1 [ create_bd_port -dir O sd_dat1 ]
  set sd_dat2 [ create_bd_port -dir O sd_dat2 ]
  set sd_dat3 [ create_bd_port -dir O sd_dat3 ]
  set sd_ncd [ create_bd_port -dir I sd_ncd ]
  set sd_sck [ create_bd_port -dir O sd_sck ]
  set sd_wp [ create_bd_port -dir I sd_wp ]
  set sw [ create_bd_port -dir I -from 1 -to 0 sw ]
  set sysclk [ create_bd_port -dir I -type clk sysclk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] $sysclk
  set uart_rx [ create_bd_port -dir I uart_rx ]
  set uart_tx [ create_bd_port -dir O uart_tx ]

  # Create instance: bootrom, and set properties
  set bootrom [ create_bd_cell -type ip -vlnv xilinx.com:ip:dist_mem_gen:8.0 bootrom ]
  set_property -dict [ list \
   CONFIG.coefficient_file {../../../../../../../pseudOS/coe/result_bootrom.coe} \
   CONFIG.data_width {32} \
   CONFIG.default_data {00} \
   CONFIG.default_data_radix {16} \
   CONFIG.depth {1024} \
   CONFIG.memory_type {rom} \
 ] $bootrom

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {80.0} \
   CONFIG.CLKOUT1_JITTER {529.616} \
   CONFIG.CLKOUT1_PHASE_ERROR {319.966} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {5} \
   CONFIG.CLKOUT1_USED {true} \
   CONFIG.CLKOUT2_JITTER {249.501} \
   CONFIG.CLKOUT2_PHASE_ERROR {122.096} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {25} \
   CONFIG.CLKOUT2_USED {false} \
   CONFIG.CLKOUT3_JITTER {112.962} \
   CONFIG.CLKOUT3_PHASE_ERROR {112.379} \
   CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {250} \
   CONFIG.CLKOUT3_USED {false} \
   CONFIG.CLKOUT4_JITTER {237.289} \
   CONFIG.CLKOUT4_PHASE_ERROR {112.379} \
   CONFIG.CLKOUT4_REQUESTED_OUT_FREQ {4.687} \
   CONFIG.CLKOUT4_USED {false} \
   CONFIG.CLK_IN1_BOARD_INTERFACE {Custom} \
   CONFIG.CLK_IN2_BOARD_INTERFACE {Custom} \
   CONFIG.CLK_OUT1_PORT {clk_main} \
   CONFIG.CLK_OUT2_PORT {clk_hdmi} \
   CONFIG.CLK_OUT3_PORT {clk_hdmi_10x} \
   CONFIG.CLK_OUT4_PORT {clk_slow} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {25.500} \
   CONFIG.MMCM_CLKIN1_PERIOD {8.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {127.500} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {1} \
   CONFIG.MMCM_CLKOUT2_DIVIDE {1} \
   CONFIG.MMCM_CLKOUT3_DIVIDE {1} \
   CONFIG.MMCM_DIVCLK_DIVIDE {5} \
   CONFIG.NUM_OUT_CLKS {1} \
   CONFIG.RESET_BOARD_INTERFACE {Custom} \
 ] $clk_wiz_0

  # Create instance: clock_divider_bd_0, and set properties
  set block_name clock_divider_bd
  set block_cell_name clock_divider_bd_0
  if { [catch {set clock_divider_bd_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $clock_divider_bd_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: cpu_multi_cycle_0, and set properties
  set block_name cpu_multi_cycle
  set block_cell_name cpu_multi_cycle_0
  if { [catch {set cpu_multi_cycle_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cpu_multi_cycle_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: debounce_0, and set properties
  set block_name debounce
  set block_cell_name debounce_0
  if { [catch {set debounce_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: debounce_1, and set properties
  set block_name debounce
  set block_cell_name debounce_1
  if { [catch {set debounce_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.N {4} \
 ] $debounce_1

  # Create instance: gpio_0, and set properties
  set block_name gpio
  set block_cell_name gpio_0
  if { [catch {set gpio_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $gpio_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: interrupt_unit_0, and set properties
  set block_name interrupt_unit
  set block_cell_name interrupt_unit_0
  if { [catch {set interrupt_unit_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $interrupt_unit_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: main_memory, and set properties
  set main_memory [ create_bd_cell -type ip -vlnv xilinx.com:ip:dist_mem_gen:8.0 main_memory ]
  set_property -dict [ list \
   CONFIG.data_width {32} \
   CONFIG.depth {4096} \
 ] $main_memory

  # Create instance: mmapper_0, and set properties
  set block_name mmapper
  set block_cell_name mmapper_0
  if { [catch {set mmapper_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mmapper_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: mmu_0, and set properties
  set block_name mmu
  set block_cell_name mmu_0
  if { [catch {set mmu_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mmu_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: sdcard_0, and set properties
  set block_name sdcard
  set block_cell_name sdcard_0
  if { [catch {set sdcard_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $sdcard_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: sdmm_0, and set properties
  set block_name sdmm
  set block_cell_name sdmm_0
  if { [catch {set sdmm_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $sdmm_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: timer_interrupt_0, and set properties
  set block_name timer_interrupt
  set block_cell_name timer_interrupt_0
  if { [catch {set timer_interrupt_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $timer_interrupt_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: uart_0, and set properties
  set block_name uart
  set block_cell_name uart_0
  if { [catch {set uart_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $uart_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {2} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create port connections
  connect_bd_net -net btn_1 [get_bd_ports btn] [get_bd_pins debounce_1/i_btn]
  connect_bd_net -net cpu_multi_cycle_0_a [get_bd_pins cpu_multi_cycle_0/a] [get_bd_pins mmu_0/va]
  connect_bd_net -net cpu_multi_cycle_0_d [get_bd_pins cpu_multi_cycle_0/d] [get_bd_pins mmu_0/vd]
  connect_bd_net -net cpu_multi_cycle_0_iack [get_bd_pins cpu_multi_cycle_0/iack] [get_bd_pins interrupt_unit_0/iack]
  connect_bd_net -net cpu_multi_cycle_0_rd [get_bd_pins cpu_multi_cycle_0/rd] [get_bd_pins mmu_0/vrd]
  connect_bd_net -net cpu_multi_cycle_0_we [get_bd_pins cpu_multi_cycle_0/we] [get_bd_pins mmu_0/vwe]
  connect_bd_net -net debounce_0_o_state [get_bd_pins debounce_0/o_state] [get_bd_pins gpio_0/sw] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net debounce_1_o_state [get_bd_ports sw] [get_bd_pins debounce_0/i_btn]
  connect_bd_net -net debounce_1_o_state1 [get_bd_pins debounce_1/o_state] [get_bd_pins gpio_0/btn]
  connect_bd_net -net dist_mem_gen_0_spo [get_bd_pins bootrom/spo] [get_bd_pins mmapper_0/bootm_spo]
  connect_bd_net -net gpio_0_led [get_bd_ports led] [get_bd_pins gpio_0/led]
  connect_bd_net -net gpio_0_rgbled1 [get_bd_ports led4] [get_bd_pins gpio_0/rgbled1]
  connect_bd_net -net gpio_0_rgbled2 [get_bd_ports led5] [get_bd_pins gpio_0/rgbled2]
  connect_bd_net -net gpio_0_spo [get_bd_pins gpio_0/spo] [get_bd_pins mmapper_0/gpio_spo]
  connect_bd_net -net interrupt_unit_0_icause [get_bd_pins cpu_multi_cycle_0/icause] [get_bd_pins interrupt_unit_0/icause]
  connect_bd_net -net interrupt_unit_0_irq [get_bd_pins cpu_multi_cycle_0/irq] [get_bd_pins interrupt_unit_0/irq]
  connect_bd_net -net interrupt_unit_0_spo [get_bd_pins interrupt_unit_0/spo] [get_bd_pins mmapper_0/isr_spo]
  connect_bd_net -net main_memory_spo [get_bd_pins main_memory/spo] [get_bd_pins mmapper_0/mainm_spo]
  connect_bd_net -net mmapper_0_bootm_a [get_bd_pins bootrom/a] [get_bd_pins mmapper_0/bootm_a]
  connect_bd_net -net mmapper_0_gpio_a [get_bd_pins gpio_0/a] [get_bd_pins mmapper_0/gpio_a]
  connect_bd_net -net mmapper_0_gpio_d [get_bd_pins gpio_0/d] [get_bd_pins mmapper_0/gpio_d]
  connect_bd_net -net mmapper_0_gpio_we [get_bd_pins gpio_0/we] [get_bd_pins mmapper_0/gpio_we]
  connect_bd_net -net mmapper_0_isr_a [get_bd_pins interrupt_unit_0/a] [get_bd_pins mmapper_0/isr_a]
  connect_bd_net -net mmapper_0_isr_d [get_bd_pins interrupt_unit_0/d] [get_bd_pins mmapper_0/isr_d]
  connect_bd_net -net mmapper_0_isr_we [get_bd_pins interrupt_unit_0/we] [get_bd_pins mmapper_0/isr_we]
  connect_bd_net -net mmapper_0_mainm_a [get_bd_pins main_memory/a] [get_bd_pins mmapper_0/mainm_a]
  connect_bd_net -net mmapper_0_mainm_d [get_bd_pins main_memory/d] [get_bd_pins mmapper_0/mainm_d]
  connect_bd_net -net mmapper_0_mainm_we [get_bd_pins main_memory/we] [get_bd_pins mmapper_0/mainm_we]
  connect_bd_net -net mmapper_0_ready [get_bd_pins mmapper_0/ready] [get_bd_pins mmu_0/pready]
  connect_bd_net -net mmapper_0_sd_a [get_bd_pins mmapper_0/sd_a] [get_bd_pins sdmm_0/a]
  connect_bd_net -net mmapper_0_sd_d [get_bd_pins mmapper_0/sd_d] [get_bd_pins sdmm_0/d]
  connect_bd_net -net mmapper_0_sd_rd [get_bd_pins mmapper_0/sd_rd] [get_bd_pins sdmm_0/rd]
  connect_bd_net -net mmapper_0_sd_we [get_bd_pins mmapper_0/sd_we] [get_bd_pins sdmm_0/we]
  connect_bd_net -net mmapper_0_spo [get_bd_pins mmapper_0/spo] [get_bd_pins mmu_0/pspo]
  connect_bd_net -net mmapper_0_uart_a [get_bd_pins mmapper_0/uart_a] [get_bd_pins uart_0/a]
  connect_bd_net -net mmapper_0_uart_d [get_bd_pins mmapper_0/uart_d] [get_bd_pins uart_0/d]
  connect_bd_net -net mmapper_0_uart_we [get_bd_pins mmapper_0/uart_we] [get_bd_pins uart_0/we]
  connect_bd_net -net mmu_0_pa [get_bd_pins mmapper_0/a] [get_bd_pins mmu_0/pa]
  connect_bd_net -net mmu_0_pd [get_bd_pins mmapper_0/d] [get_bd_pins mmu_0/pd]
  connect_bd_net -net mmu_0_prd [get_bd_pins mmapper_0/rd] [get_bd_pins mmu_0/prd]
  connect_bd_net -net mmu_0_pwe [get_bd_pins mmapper_0/we] [get_bd_pins mmu_0/pwe]
  connect_bd_net -net mmu_0_vready [get_bd_pins cpu_multi_cycle_0/ready] [get_bd_pins mmu_0/vready]
  connect_bd_net -net mmu_0_vspo [get_bd_pins cpu_multi_cycle_0/spo] [get_bd_pins mmu_0/vspo]
  connect_bd_net -net sd_dat0_0_1 [get_bd_ports sd_dat0] [get_bd_pins sdcard_0/sd_dat0]
  connect_bd_net -net sd_ncd_0_1 [get_bd_ports sd_ncd] [get_bd_pins sdcard_0/sd_ncd]
  connect_bd_net -net sd_wp_0_1 [get_bd_ports sd_wp] [get_bd_pins sdcard_0/sd_wp]
  connect_bd_net -net sdcard_0_ready [get_bd_pins mmapper_0/sd_ready] [get_bd_pins sdmm_0/ready]
  connect_bd_net -net sdcard_0_sd_cmd [get_bd_ports sd_cmd] [get_bd_pins sdcard_0/sd_cmd]
  connect_bd_net -net sdcard_0_sd_dat1 [get_bd_ports sd_dat1] [get_bd_pins sdcard_0/sd_dat1]
  connect_bd_net -net sdcard_0_sd_dat2 [get_bd_ports sd_dat2] [get_bd_pins sdcard_0/sd_dat2]
  connect_bd_net -net sdcard_0_sd_dat3 [get_bd_ports sd_dat3] [get_bd_pins sdcard_0/sd_dat3]
  connect_bd_net -net sdcard_0_sd_sck [get_bd_ports sd_sck] [get_bd_pins sdcard_0/sd_sck]
  connect_bd_net -net sdcard_0_spo [get_bd_pins sdcard_0/spo] [get_bd_pins sdmm_0/sddrv_spo]
  connect_bd_net -net sdmm_0_irq [get_bd_pins interrupt_unit_0/irq_sdcard] [get_bd_pins sdmm_0/irq]
  connect_bd_net -net sdmm_0_sddrv_a [get_bd_pins sdcard_0/a] [get_bd_pins sdmm_0/sddrv_a]
  connect_bd_net -net sdmm_0_sddrv_d [get_bd_pins sdcard_0/d] [get_bd_pins sdmm_0/sddrv_d]
  connect_bd_net -net sdmm_0_sddrv_we [get_bd_pins sdcard_0/we] [get_bd_pins sdmm_0/sddrv_we]
  connect_bd_net -net sdmm_0_spo [get_bd_pins mmapper_0/sd_spo] [get_bd_pins sdmm_0/spo]
  connect_bd_net -net sysclk_1 [get_bd_pins clk_wiz_0/clk_in1] [get_bd_pins clock_divider_bd_0/clk_out] [get_bd_pins cpu_multi_cycle_0/clk] [get_bd_pins debounce_0/clk] [get_bd_pins debounce_1/clk] [get_bd_pins gpio_0/clk] [get_bd_pins interrupt_unit_0/clk] [get_bd_pins main_memory/clk] [get_bd_pins mmu_0/clk] [get_bd_pins sdcard_0/clk] [get_bd_pins sdmm_0/clk] [get_bd_pins timer_interrupt_0/clk_125M] [get_bd_pins uart_0/clk]
  connect_bd_net -net sysclk_2 [get_bd_ports sysclk] [get_bd_pins clock_divider_bd_0/clk_in]
  connect_bd_net -net timer_interrupt_0_irq [get_bd_pins interrupt_unit_0/irq_timer] [get_bd_pins timer_interrupt_0/irq]
  connect_bd_net -net uart_0_irq [get_bd_pins interrupt_unit_0/irq_keyboard] [get_bd_pins uart_0/irq]
  connect_bd_net -net uart_0_spo [get_bd_pins mmapper_0/uart_spo] [get_bd_pins uart_0/spo]
  connect_bd_net -net uart_0_tx [get_bd_ports uart_tx] [get_bd_pins uart_0/tx]
  connect_bd_net -net uart_rx_1 [get_bd_ports uart_rx] [get_bd_pins uart_0/rx]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins cpu_multi_cycle_0/rst] [get_bd_pins gpio_0/rst] [get_bd_pins interrupt_unit_0/rst] [get_bd_pins mmu_0/rst] [get_bd_pins sdcard_0/rst] [get_bd_pins sdmm_0/rst] [get_bd_pins timer_interrupt_0/rst] [get_bd_pins uart_0/rst] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins clk_wiz_0/reset] [get_bd_pins xlslice_1/Dout]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ExpandedHierarchyInLayout":"",
   "PinnedBlocks":"/clk_wiz_0|/xlslice_0|/bootrom|/gpio_0|/main_memory|/uart_0|/cpu_multi_cycle_0|/interrupt_unit_0|/xlslice_1|/mmapper_0|/sdcard_0|/debounce_0|/debounce_1|/timer_interrupt_0|/clock_divider_bd_0|/mmu_0|",
   "PinnedPorts":"",
   "commentid":"",
   "guistr":"# # String gsaved with Nlview 7.0.19  2019-03-26 bk=1.5019 VDI=41 GEI=35 GUI=JA:9.0 TLS
#  -string -flagsOSRD
preplace port sysclk -pg 1 -lvl 0 -x -450 -y 310 -defaultsOSRD
preplace port uart_tx -pg 1 -lvl 7 -x 2100 -y 560 -defaultsOSRD
preplace port uart_rx -pg 1 -lvl 7 -x 2100 -y 650 -defaultsOSRD -right
preplace port sd_sck -pg 1 -lvl 7 -x 2100 -y 1140 -defaultsOSRD
preplace port sd_cmd -pg 1 -lvl 7 -x 2100 -y 1110 -defaultsOSRD
preplace port sd_dat3 -pg 1 -lvl 7 -x 2100 -y 1080 -defaultsOSRD
preplace port sd_dat2 -pg 1 -lvl 7 -x 2100 -y 1050 -defaultsOSRD
preplace port sd_dat0 -pg 1 -lvl 7 -x 2100 -y 930 -defaultsOSRD -right
preplace port sd_dat1 -pg 1 -lvl 7 -x 2100 -y 1020 -defaultsOSRD
preplace port sd_ncd -pg 1 -lvl 7 -x 2100 -y 990 -defaultsOSRD -right
preplace port sd_wp -pg 1 -lvl 7 -x 2100 -y 960 -defaultsOSRD -right
preplace portBus sw -pg 1 -lvl 0 -x -450 -y 90 -defaultsOSRD
preplace portBus btn -pg 1 -lvl 0 -x -450 -y -30 -defaultsOSRD
preplace portBus led -pg 1 -lvl 7 -x 2100 -y 310 -defaultsOSRD
preplace portBus led4 -pg 1 -lvl 7 -x 2100 -y 340 -defaultsOSRD
preplace portBus led5 -pg 1 -lvl 7 -x 2100 -y 370 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 2 -x 380 -y 740 -defaultsOSRD
preplace inst xlslice_0 -pg 1 -lvl 1 -x 40 -y 200 -defaultsOSRD
preplace inst bootrom -pg 1 -lvl 6 -x 1870 -y -30 -defaultsOSRD
preplace inst gpio_0 -pg 1 -lvl 6 -x 1870 -y 330 -defaultsOSRD
preplace inst debounce_0 -pg 1 -lvl 1 -x 40 -y 80 -defaultsOSRD
preplace inst debounce_1 -pg 1 -lvl 1 -x 40 -y -40 -defaultsOSRD -resize 200 96
preplace inst main_memory -pg 1 -lvl 6 -x 1870 -y 100 -defaultsOSRD
preplace inst xlslice_1 -pg 1 -lvl 1 -x 40 -y 730 -defaultsOSRD -resize 160 88
preplace inst clock_divider_bd_0 -pg 1 -lvl 1 -x 40 -y 310 -defaultsOSRD
preplace inst interrupt_unit_0 -pg 1 -lvl 2 -x 380 -y 450 -defaultsOSRD
preplace inst uart_0 -pg 1 -lvl 6 -x 1870 -y 540 -defaultsOSRD
preplace inst timer_interrupt_0 -pg 1 -lvl 1 -x 40 -y 430 -defaultsOSRD
preplace inst cpu_multi_cycle_0 -pg 1 -lvl 3 -x 680 -y 440 -defaultsOSRD
preplace inst sdcard_0 -pg 1 -lvl 6 -x 1870 -y 1100 -defaultsOSRD
preplace inst sdmm_0 -pg 1 -lvl 6 -x 1870 -y 790 -defaultsOSRD
preplace inst mmapper_0 -pg 1 -lvl 5 -x 1330 -y 540 -defaultsOSRD
preplace inst mmu_0 -pg 1 -lvl 4 -x 960 -y 450 -defaultsOSRD
preplace netloc gpio_0_led 1 6 1 2080 310n
preplace netloc gpio_0_spo 1 4 3 1150 190 N 190 2040
preplace netloc mmapper_0_gpio_a 1 5 1 1550 310n
preplace netloc mmapper_0_gpio_d 1 5 1 1580 330n
preplace netloc mmapper_0_gpio_we 1 5 1 1610 350n
preplace netloc mmapper_0_bootm_a 1 5 1 1570 -30n
preplace netloc dist_mem_gen_0_spo 1 4 3 1110 -100 NJ -100 2070
preplace netloc sysclk_1 1 0 6 -420 -110 170 310 510 330 810 270 N 270 1640
preplace netloc gpio_0_rgbled1 1 6 1 N 340
preplace netloc gpio_0_rgbled2 1 6 1 2080 360n
preplace netloc uart_0_tx 1 6 1 N 560
preplace netloc uart_0_spo 1 4 3 1150 800 1680J 660 2020
preplace netloc mmapper_0_uart_a 1 5 1 1630 530n
preplace netloc mmapper_0_uart_d 1 5 1 1530 550n
preplace netloc mmapper_0_uart_we 1 5 1 1670 570n
preplace netloc uart_rx_1 1 5 2 1680 650 N
preplace netloc debounce_1_o_state 1 0 1 N 90
preplace netloc xlslice_0_Dout 1 0 6 -420 500 160 290 520 290 800 290 N 290 1600
preplace netloc debounce_0_o_state 1 0 6 -430 -120 210 170 N 170 N 170 N 170 1630
preplace netloc btn_1 1 0 1 N -30
preplace netloc debounce_1_o_state1 1 1 5 160 180 N 180 NJ 180 N 180 1620J
preplace netloc mmapper_0_mainm_a 1 5 1 1510 70n
preplace netloc mmapper_0_mainm_d 1 5 1 1520 90n
preplace netloc mmapper_0_mainm_we 1 5 1 1530 130n
preplace netloc main_memory_spo 1 4 3 1140 -90 NJ -90 2030
preplace netloc cpu_multi_cycle_0_iack 1 1 3 210 280 N 280 790J
preplace netloc interrupt_unit_0_irq 1 2 1 N 430
preplace netloc interrupt_unit_0_icause 1 2 1 N 450
preplace netloc uart_0_irq 1 1 6 200 210 N 210 NJ 210 N 210 NJ 210 2030
preplace netloc timer_interrupt_0_irq 1 1 1 N 430
preplace netloc mmapper_0_isr_we 1 1 5 210 820 N 820 NJ 820 N 820 1480
preplace netloc mmapper_0_isr_d 1 1 5 200 810 N 810 NJ 810 N 810 1490
preplace netloc mmapper_0_isr_a 1 1 5 190 250 N 250 NJ 250 N 250 1500
preplace netloc sdcard_0_sd_sck 1 6 1 2080 1120n
preplace netloc sdcard_0_sd_cmd 1 6 1 2080 1100n
preplace netloc sdcard_0_sd_dat3 1 6 1 N 1080
preplace netloc sdcard_0_sd_dat2 1 6 1 2080 1050n
preplace netloc sd_dat0_0_1 1 5 2 1660J 940 2080
preplace netloc sdcard_0_sd_dat1 1 6 1 2080 1020n
preplace netloc xlslice_1_Dout 1 1 1 N 730
preplace netloc sd_ncd_0_1 1 5 2 1670J 950 2080
preplace netloc sd_wp_0_1 1 5 2 1680J 960 N
preplace netloc sysclk_2 1 0 1 N 310
preplace netloc sdcard_0_ready 1 4 3 1120 910 N 910 2040
preplace netloc mmapper_0_sd_rd 1 5 1 1540 450n
preplace netloc sdmm_0_sddrv_a 1 5 2 1650 930 2030
preplace netloc sdmm_0_sddrv_d 1 5 2 1670 1240 2060
preplace netloc sdmm_0_sddrv_we 1 5 2 1680 1250 2050
preplace netloc sdcard_0_spo 1 5 2 1680 920 2020
preplace netloc mmapper_0_sd_a 1 5 1 1620 390n
preplace netloc mmapper_0_sd_d 1 5 1 1590 410n
preplace netloc mmapper_0_sd_we 1 5 1 1560 430n
preplace netloc sdmm_0_spo 1 4 3 1130 790 1550J 670 2020
preplace netloc sdmm_0_irq 1 1 6 180 200 N 200 NJ 200 N 200 NJ 200 2070
preplace netloc cpu_multi_cycle_0_a 1 3 1 N 420
preplace netloc cpu_multi_cycle_0_d 1 3 1 N 440
preplace netloc cpu_multi_cycle_0_we 1 3 1 N 460
preplace netloc cpu_multi_cycle_0_rd 1 3 1 N 480
preplace netloc mmu_0_pa 1 4 1 N 440
preplace netloc mmu_0_pd 1 4 1 N 460
preplace netloc mmu_0_pwe 1 4 1 N 480
preplace netloc mmu_0_prd 1 4 1 N 500
preplace netloc mmapper_0_spo 1 3 3 820 260 NJ 260 1490
preplace netloc mmapper_0_ready 1 3 3 830 280 NJ 280 1480
preplace netloc mmu_0_vspo 1 2 3 550 320 NJ 320 1080
preplace netloc mmu_0_vready 1 2 3 540 310 NJ 310 1090
preplace netloc interrupt_unit_0_spo 1 2 3 530J 300 NJ 300 1100
levelinfo -pg 1 -450 40 380 680 960 1330 1870 2100
pagesize -pg 1 -db -bbox -sgen -550 -310 2210 1330
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_top_design()
cr_bd_top_design ""
set_property REGISTERED_WITH_MANAGER "1" [get_files top_design.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files top_design.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
